[{"C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\index.js":"1","C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\App.js":"2","C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\reportWebVitals.js":"3","C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\components\\Forecast.js":"4","C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\components\\TopForecast.js":"5","C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\components\\Chart.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":197,"mtime":1611338581502,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":6548,"mtime":1611349328052,"results":"11","hashOfConfig":"8"},{"size":565,"mtime":1611346754788,"results":"12","hashOfConfig":"8"},{"size":1868,"mtime":1611347389449,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xt3n71",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\index.js",[],["30","31"],"C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\App.js",[],"C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\reportWebVitals.js",[],"C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\components\\Forecast.js",["32","33","34","35","36","37"],"import React, { useState, useEffect } from 'react';\r\nimport TopForecast from './TopForecast';\r\nimport '../App.css';\r\nimport { Card } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport Chart from './Chart';\r\nimport Moment from 'react-moment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst Forecast = () => {\r\n\tlet [responseObj, setResponseObj] = useState({});\r\n\tlet [city, setCity] = useState('delhi');\r\n\tconst [chartData, setChartData] = useState({});\r\n\tconst [temp, setTemp] = useState([]);\r\n\tconst [hours, setHours] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [citySearch, setCitySearch] = useState([\r\n\t\t{ name: 'delhi', temp: '15' },\r\n\t\t{ name: 'mumbai', temp: '25' },\r\n\t\t{ name: 'dehradun', temp: '10' },\r\n\t\t{ name: 'hyderabad', temp: '25' },\r\n\t\t{ name: 'chennai', temp: '35' },\r\n\t]);\r\n\r\n\t//FETCHING API\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchApi();\r\n\t}, []);\r\n\r\n\tconst fetchApi = () => {\r\n\t\tlet hour = [];\r\n\t\tlet temperature = [];\r\n\t\tfetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=4590479b57a147c925d75522bad68d1d`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tsetResponseObj(response);\r\n\t\t\t\tfor (const dataObj of response.list) {\r\n\t\t\t\t\thour.push(dataObj.dt_txt.substring(11, 16));\r\n\t\t\t\t\ttemperature.push(getCelsius(dataObj.main.temp));\r\n\t\t\t\t}\r\n\t\t\t\thour.length -= 30;\r\n\t\t\t\ttemperature.length -= 30;\r\n\t\t\t\tsetChartData({\r\n\t\t\t\t\tlabels: hour,\r\n\t\t\t\t\ttemperature,\r\n\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'temp',\r\n\t\t\t\t\t\t\tdata: temperature,\r\n\t\t\t\t\t\t\tbackgroundColor: ['white'],\r\n\r\n\t\t\t\t\t\t\tborderColor: 'blue',\r\n\t\t\t\t\t\t\tpointBackgroundColor: 'white',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\tsetLoading(true);\r\n\t\tsetTemp(temperature);\r\n\t\tsetHours(hour);\r\n\t};\r\n\r\n\tconsole.log('##', temp);\r\n\tconsole.log('$$', hours);\r\n\r\n\tconst getForecast = (e) => {\r\n\t\te.preventDefault();\r\n\t\tfetchApi();\r\n\t};\r\n\tconsole.log('33', responseObj);\r\n\r\n\t//Kelvin to celsius conversion\r\n\r\n\tconst getCelsius = (a) => {\r\n\t\tlet b = parseFloat(a);\r\n\t\tb = b - 273.15;\r\n\t\treturn b.toFixed(2);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n\t\t\t<div style={{ margin: '20px' }}>\r\n\t\t\t\t<Card className=\"forecast\">\r\n\t\t\t\t\t<form onSubmit={getForecast} className=\"forecast__form\">\r\n\t\t\t\t\t\t<LocationOnIcon />\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter City\"\r\n\t\t\t\t\t\t\tmaxLength=\"50\"\r\n\t\t\t\t\t\t\tvalue={city}\r\n\t\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\r\n\t\t\t\t\t\t\tclassName=\"forecast_input\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* <Autocomplete\r\n\t\t\t\t\t\t\tid=\"combo-box-demo\"\r\n\t\t\t\t\t\t\toptions={citySearch}\r\n\t\t\t\t\t\t\tgetOptionLabel={(option) => option.name}\r\n\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Enter City\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\tonSelect={getForecast}\r\n\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\r\n\t\t\t{loading ? (\r\n\t\t\t\tObject.keys(responseObj).length != 0 && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"chart\">\r\n\t\t\t\t\t\t\t<TopForecast\r\n\t\t\t\t\t\t\t\thighlight=\"topforecast_highlight\"\r\n\t\t\t\t\t\t\t\tresponseObj={responseObj}\r\n\t\t\t\t\t\t\t\tday={<Moment format=\"ddd\">{responseObj.list[0].dt_txt}</Moment>}\r\n\t\t\t\t\t\t\t\ttemp_min={getCelsius(responseObj.list[0].main.temp_min)}\r\n\t\t\t\t\t\t\t\ttemp_max={getCelsius(responseObj.list[0].main.temp_max)}\r\n\t\t\t\t\t\t\t\tdesc={responseObj.list[0].weather[0].description}\r\n\t\t\t\t\t\t\t\ticon={`http://openweathermap.org/img/w/${responseObj.list[0].weather[0].icon}.png`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TopForecast\r\n\t\t\t\t\t\t\t\tresponseObj={responseObj}\r\n\t\t\t\t\t\t\t\tday={<Moment format=\"ddd\">{responseObj.list[8].dt_txt}</Moment>}\r\n\t\t\t\t\t\t\t\ttemp_min={getCelsius(responseObj.list[8].main.temp_min)}\r\n\t\t\t\t\t\t\t\ttemp_max={getCelsius(responseObj.list[8].main.temp_max)}\r\n\t\t\t\t\t\t\t\tdesc={responseObj.list[8].weather[0].description}\r\n\t\t\t\t\t\t\t\ticon={`http://openweathermap.org/img/w/${responseObj.list[8].weather[0].icon}.png`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TopForecast\r\n\t\t\t\t\t\t\t\tresponseObj={responseObj}\r\n\t\t\t\t\t\t\t\tday={<Moment format=\"ddd\">{responseObj.list[16].dt_txt}</Moment>}\r\n\t\t\t\t\t\t\t\ttemp_min={getCelsius(responseObj.list[16].main.temp_min)}\r\n\t\t\t\t\t\t\t\ttemp_max={getCelsius(responseObj.list[16].main.temp_max)}\r\n\t\t\t\t\t\t\t\tdesc={responseObj.list[16].weather[0].description}\r\n\t\t\t\t\t\t\t\ticon={`http://openweathermap.org/img/w/${responseObj.list[16].weather[0].icon}.png`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TopForecast\r\n\t\t\t\t\t\t\t\tresponseObj={responseObj}\r\n\t\t\t\t\t\t\t\tday={<Moment format=\"ddd\">{responseObj.list[24].dt_txt}</Moment>}\r\n\t\t\t\t\t\t\t\ttemp_min={getCelsius(responseObj.list[24].main.temp_min)}\r\n\t\t\t\t\t\t\t\ttemp_max={getCelsius(responseObj.list[24].main.temp_max)}\r\n\t\t\t\t\t\t\t\tdesc={responseObj.list[24].weather[0].description}\r\n\t\t\t\t\t\t\t\ticon={`http://openweathermap.org/img/w/${responseObj.list[24].weather[0].icon}.png`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TopForecast\r\n\t\t\t\t\t\t\t\tresponseObj={responseObj}\r\n\t\t\t\t\t\t\t\tday={<Moment format=\"ddd\">{responseObj.list[32].dt_txt}</Moment>}\r\n\t\t\t\t\t\t\t\ttemp_min={getCelsius(responseObj.list[32].main.temp_min)}\r\n\t\t\t\t\t\t\t\ttemp_max={getCelsius(responseObj.list[32].main.temp_max)}\r\n\t\t\t\t\t\t\t\tdesc={responseObj.list[32].weather[0].description}\r\n\t\t\t\t\t\t\t\ticon={`http://openweathermap.org/img/w/${responseObj.list[32].weather[0].icon}.png`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TopForecast\r\n\t\t\t\t\t\t\t\tresponseObj={responseObj}\r\n\t\t\t\t\t\t\t\tday={<Moment format=\"ddd\">{responseObj.list[39].dt_txt}</Moment>}\r\n\t\t\t\t\t\t\t\ttemp_min={getCelsius(responseObj.list[39].main.temp_min)}\r\n\t\t\t\t\t\t\t\ttemp_max={getCelsius(responseObj.list[39].main.temp_max)}\r\n\t\t\t\t\t\t\t\tdesc={responseObj.list[39].weather[0].description}\r\n\t\t\t\t\t\t\t\ticon={`http://openweathermap.org/img/w/${responseObj.list[39].weather[0].icon}.png`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"chart\">\r\n\t\t\t\t\t\t\t<Chart\r\n\t\t\t\t\t\t\t\tdata={chartData}\r\n\t\t\t\t\t\t\t\tresponse={responseObj}\r\n\t\t\t\t\t\t\t\ttemp={getCelsius(responseObj.list[0].main.temp)}\r\n\t\t\t\t\t\t\t\ticon={`http://openweathermap.org/img/w/${responseObj.list[0].weather[0].icon}.png`}\r\n\t\t\t\t\t\t\t\thumidity={responseObj.list[0].main.humidity}\r\n\t\t\t\t\t\t\t\tpressure={responseObj.list[0].main.pressure}\r\n\t\t\t\t\t\t\t\tsunrise={responseObj.city.sunrise}\r\n\t\t\t\t\t\t\t\tsunset={responseObj.city.sunset}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<ContentLoader />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Forecast;\r\n","C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\components\\TopForecast.js",["38"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport '../App.css';\r\n\r\nconst TopForecast = ({ day, temp_min, temp_max, desc, icon, highlight }) => {\r\n\treturn (\r\n\t\t<div className=\"topforecast__div\">\r\n\t\t\t<Paper elevation={1} className={highlight ? highlight : 'topforecast'} style={{ padding: '20px' }}>\r\n\t\t\t\t<h4 className=\"topforecast_day\">{day}</h4>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{temp_max}º<span> </span>\r\n\t\t\t\t\t{temp_min}º\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<img src={icon} />\r\n\t\t\t\t<div>{desc}</div>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TopForecast;\r\n","C:\\Users\\Prabhjot Kaur\\Desktop\\REACTJS\\weather_app\\src\\components\\Chart.js",["39"],"import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Moment from 'react-moment';\r\nimport '../App.css';\r\nimport sun from '../assets/sunrise.png';\r\n\r\nfunction Chart({ data, temp, icon, humidity, pressure, sunrise, sunset }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Paper elevation={3}>\r\n\t\t\t\t<div className=\"chart__top\">\r\n\t\t\t\t\t<h2 className=\"chart__head\">{temp} ºC</h2>\r\n\t\t\t\t\t<img className=\"chart__head\" src={icon} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Line\r\n\t\t\t\t\t\tclassName=\"char__line\"\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\tresponsive: true,\r\n\r\n\t\t\t\t\t\t\tscales: {\r\n\t\t\t\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\t\t\t\tautoSkip: true,\r\n\t\t\t\t\t\t\t\t\t\t\tmaxTicksLimit: 10,\r\n\t\t\t\t\t\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\txAxes: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"chart__humidity\">\r\n\t\t\t\t\t<div className=\"chart__humid__head\">\r\n\t\t\t\t\t\tPressure<div>{pressure} hpa</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"chart__humid__head\">\r\n\t\t\t\t\t\tHumidity<div>{humidity}%</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"chart__sunrise\">\r\n\t\t\t\t\t<div style={{ fontWeight: '700' }}>\r\n\t\t\t\t\t\tSunrise\r\n\t\t\t\t\t\t<div style={{ fontWeight: '600', color: 'grey' }}>\r\n\t\t\t\t\t\t\t<Moment format=\"hh:mm\">{sunrise}</Moment>\r\n\t\t\t\t\t\t\tam\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ fontWeight: '700' }}>\r\n\t\t\t\t\t\tSunset\r\n\t\t\t\t\t\t<div style={{ fontWeight: '600', color: 'grey' }}>\r\n\t\t\t\t\t\t\t<Moment format=\"hh:mm\">{sunset}</Moment>\r\n\t\t\t\t\t\t\tpm\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src={sun} alt=\"sunrise\" height=\"100%\" width=\"100%\" />\r\n\t\t\t\t</div>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Chart;\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":9,"column":8,"nodeType":"46","messageId":"47","endLine":9,"endColumn":17},{"ruleId":"44","severity":1,"message":"48","line":10,"column":8,"nodeType":"46","messageId":"47","endLine":10,"endColumn":20},{"ruleId":"44","severity":1,"message":"49","line":21,"column":9,"nodeType":"46","messageId":"47","endLine":21,"endColumn":19},{"ruleId":"44","severity":1,"message":"50","line":21,"column":21,"nodeType":"46","messageId":"47","endLine":21,"endColumn":34},{"ruleId":"51","severity":1,"message":"52","line":33,"column":5,"nodeType":"53","endLine":33,"endColumn":7,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":122,"column":37,"nodeType":"57","messageId":"58","endLine":122,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":15,"column":5,"nodeType":"61","endLine":15,"endColumn":23},{"ruleId":"59","severity":1,"message":"60","line":14,"column":6,"nodeType":"61","endLine":14,"endColumn":48},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'Autocomplete' is defined but never used.","'citySearch' is assigned a value but never used.","'setCitySearch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.","ArrayExpression",["64"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [fetchApi]",{"range":"67","text":"68"},[1105,1107],"[fetchApi]"]